// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction

input {
    keyboard {
        xkb {
            layout "in"
            variant "eng"
            //options "compose:ralt"
        }
        numlock
    }

    touchpad {
        off
    }

    mouse {
        accel-speed 0.6
    }

    trackpoint {
        off
    }

    // warp-mouse-to-focus

    focus-follows-mouse max-scroll-amount="0%"
    workspace-auto-back-and-forth
}

layout {
    gaps 10

    // When to center a column when changing focus, options are:
    // - "never", "always", "on-overflow"
    //center-focused-column "on-overflow"
    always-center-single-column

    preset-column-widths {
        proportion 0.4
        proportion 0.5
        proportion 0.6
	proportion 0.75
    }

    preset-window-heights {
        proportion 0.4
        proportion 0.5
        proportion 0.6
    }

    default-column-width {}
    
    tab-indicator {
        width 4
        position "bottom"
        gap 4
    }
    
    insert-hint {
        color "#ffc87f80"
        gradient from="orange" to="green" angle=45 relative-to="workspace-view"
    }

    focus-ring {
        // off
        width 4
        active-color "#7fc8ff"
        inactive-color "#505050"
        active-gradient from="#ccde66" to="#41faaa" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    border {
        off
        width 1
        active-color "red"
        inactive-color "#505050"
        urgent-color "#9b0000"
        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    shadow {
        // on
        // draw-behind-window true
        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
    }

    struts {
        left 32
        right 32
        top -2
        bottom 2
    }
    
    background-color "transparent"
}

//spawn-at-startup "waybar"

prefer-no-csd

// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"
// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

cursor {
    xcursor-theme "BreezeX-Black"
    xcursor-size 32
}

overview {
    workspace-shadow {
        off
    }
}

hotkey-overlay {
    skip-at-startup
}

animations {
    // Uncomment to turn off all animations.
    // off
    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0
}

// Window rules

/-window-rule {
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    
    default-column-width {}
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    match app-id=r#"firefox$"# title="^Library$"
    match app-id="org.gnome.Calculator"
    
    open-floating true
}

/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"
    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

window-rule {
    geometry-corner-radius 10
    clip-to-geometry true
}

// fuzzel layer
layer-rule {
    match namespace="^launcher$"
    shadow {
        on
        spread 3
        color "#e64553ff"
    }
    geometry-corner-radius 15
}

//wallpaper layer
layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}

binds {
    
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs
    Mod+Return hotkey-overlay-title="Open a Terminal: alacritty" { spawn "alacritty"; }
    Mod+X      hotkey-overlay-title="Open a Terminal: alacritty" { spawn "kitty"; }
    Mod+Space  hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }
    Mod+D      hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }
    Mod+Alt+L  hotkey-overlay-title="Lock the Screen: swaylock"  { spawn "swaylock"; }
    Mod+Ctrl+Q hotkey-overlay-title="Open Power menu"            { spawn "wlogout"; }
    
    Mod+M       hotkey-overlay-title="Open Browser: firefox" { spawn "firefox"; }
    Mod+J       hotkey-overlay-title="Open Files" { spawn "nautilus"; }
    Mod+K       hotkey-overlay-title="Open Text Editor" { spawn "gnome-text-editor"; }
    Mod+Shift+K hotkey-overlay-title="Open Calculator" { spawn "gnome-calculator"; }
    Mod+Ctrl+K  hotkey-overlay-title="Open Characters" { spawn "gnome-characters"; }
    //Un-assigned letter hotkeys
    //Mod+W      hotkey-overlay-title="Open " { spawn ""; }
    //Mod+A      hotkey-overlay-title="Open " { spawn ""; }
    //Mod+X      hotkey-overlay-title="Open " { spawn ""; }
    //Mod+W      hotkey-overlay-title="Open " { spawn ""; }
    //Mod+O      hotkey-overlay-title="Open " { spawn ""; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05+" "-l" "1"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+G repeat=false { toggle-overview; }

    Mod+Q { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+R     { focus-column-left; }
    Mod+S     { focus-window-down-or-top; }
    Mod+F     { focus-window-up-or-bottom; }
    Mod+T     { focus-column-right; }

    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+R     { move-column-left; }
    Mod+Ctrl+S     { move-window-down; }
    Mod+Ctrl+F     { move-window-up; }
    Mod+Ctrl+T     { move-column-right; }

    // Alternative commands that move across workspaces when reaching the first or last window in a column.
    // Mod+S      { focus-window-or-workspace-down; }
    // Mod+Ctrl+S { move-window-down-or-to-workspace-down; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+R     { focus-monitor-left; }
    Mod+Shift+S     { focus-monitor-down; }
    Mod+Shift+F     { focus-monitor-up; }
    Mod+Shift+T     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+R     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+S     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+F     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+T     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+E              { focus-workspace-down; }
    Mod+U              { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+E         { move-column-to-workspace-down; }
    Mod+Ctrl+U         { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+E         { move-workspace-down; }
    Mod+Shift+U         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // To avoid scrolling through workspaces really fast, you can use the cooldown-ms property.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    //Mod+WheelScrollRight      { focus-column-right; }
    //Mod+WheelScrollLeft       { focus-column-left; }
    //Mod+Ctrl+WheelScrollRight { move-column-right; }
    //Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

  
    // You can refer to workspaces by index
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    Mod+Tab { focus-workspace-previous; }

    Mod+L      { consume-or-expel-window-left; }
    Mod+Y      { consume-or-expel-window-right; }
    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+P       { switch-preset-column-width; }
    Mod+Shift+P { switch-preset-window-height; }
    Mod+Ctrl+P  { reset-window-height; }
    Mod+Z       { maximize-column; }
    Mod+Shift+Z { fullscreen-window; }
    Mod+Ctrl+Z  { expand-column-to-available-width; }

    Mod+C      { center-column; }
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments e.g. "1000", "-5" or "+5", "25%", "-10%" or "+10%"
    Mod+N { set-column-width "-10%"; }
    Mod+I { set-column-width "+10%"; }
    Mod+Shift+N { set-window-height "-10%"; }
    Mod+Shift+I { set-window-height "+10%"; }

    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }
    Mod+B       { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Mod+Space       { switch-layout "next"; }

    Print      { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print  { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+Q     { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+L { power-off-monitors; }
}
